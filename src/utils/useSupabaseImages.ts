import axios from "axios";
import { useCallback } from "react";
import { getToken } from "./supabaseClient";

const SUPABASE_IMAGE_API =
  "https://tgitxrjsbuimawihmkth.supabase.co/functions/v1/images";

export interface SupabaseImageItem {
  id: string;
  file_url: string;
}

export const useSupabaseImages = () => {
  const uploadImage = useCallback(
    async (file: File, templateId: string): Promise<SupabaseImageItem> => {
      const token = await getToken();
      console.log("üóùÔ∏è Token:", token);

      const formData = new FormData();
      formData.append("file", file); // –¢–æ–ª—å–∫–æ —Ñ–∞–π–ª, –±–µ–∑ template_id

      const url = `${SUPABASE_IMAGE_API}?template_id=${encodeURIComponent(
        templateId
      )}`;

      const response = await axios.post(url, formData, {
        headers: {
          Authorization: `Bearer ${token}`,
          // –ù–µ —É–∫–∞–∑—ã–≤–∞–µ–º Content-Type –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ FormData ‚Äî Axios —Å–¥–µ–ª–∞–µ—Ç —ç—Ç–æ —Å–∞–º
        },
      });

      console.log("‚úÖ Image uploaded:", response.data);
      return response.data;
    },
    []
  );

  const getImages = useCallback(
    async (templateId: string): Promise<SupabaseImageItem[]> => {
      const token = await getToken();
      const response = await axios.get(SUPABASE_IMAGE_API, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
        params: {
          template_id: templateId,
        },
      });

      console.log("üì¶ Retrieved images:", response.data);
      return response.data;
    },
    []
  );

  const deleteImage = useCallback(async (id: string): Promise<void> => {
    const token = await getToken();
    await axios.delete(SUPABASE_IMAGE_API, {
      headers: {
        Authorization: `Bearer ${token}`,
      },
      params: { id },
    });
    console.log("üóëÔ∏è Deleted image with id:", id);
  }, []);

  return {
    uploadImage,
    getImages,
    deleteImage,
  };
};
