import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from "react";
import { useBanner } from "../context/BannerContext";
import { Box, Typography, TextField, List, ListItem, ListItemText, Button, MenuItem, Select, FormControl, InputLabel, } from "@mui/material";
const ObjectProperties = () => {
    const { objects, updateObject, deleteObject } = useBanner();
    const [selectedId, setSelectedId] = useState(null);
    const selectedObject = objects.find((obj) => obj.id === selectedId);
    const handleChange = (key, value) => {
        if (selectedId !== null) {
            updateObject(selectedId, { [key]: value });
        }
    };
    const handleDelete = () => {
        if (selectedId !== null) {
            deleteObject(selectedId);
            setSelectedId(null);
        }
    };
    return (_jsxs(Box, { className: "object-properties", children: [_jsx(Typography, { variant: "h5", children: "\u0412\u043B\u0430\u0441\u0442\u0438\u0432\u043E\u0441\u0442\u0456 \u043E\u0431'\u0454\u043A\u0442\u0443" }), selectedObject ? (_jsxs(Box, { className: "properties-list", children: [selectedObject.type === "text" && (_jsxs(_Fragment, { children: [_jsx(TextField, { label: "\u0422\u0435\u043A\u0441\u0442", value: selectedObject.content || "", onChange: (e) => handleChange("content", e.target.value), fullWidth: true, margin: "normal" }), _jsx(TextField, { label: "\u0420\u043E\u0437\u043C\u0456\u0440 \u0448\u0440\u0438\u0444\u0442\u0430", type: "number", value: selectedObject.fontSize || 16, onChange: (e) => handleChange("fontSize", parseInt(e.target.value)), fullWidth: true, margin: "normal" }), _jsx(TextField, { label: "\u041A\u043E\u043B\u0456\u0440", type: "color", value: selectedObject.color || "#000000", onChange: (e) => handleChange("color", e.target.value), fullWidth: true, margin: "normal" }), _jsx(TextField, { label: "\u0428\u0438\u0440\u0438\u043D\u0430 (px)", type: "number", value: selectedObject.width || 300, onChange: (e) => handleChange("width", parseInt(e.target.value)), fullWidth: true, margin: "normal" }), _jsx(TextField, { label: "\u0412\u0438\u0441\u043E\u0442\u0430 (px)", type: "number", value: selectedObject.height || 300, onChange: (e) => handleChange("height", parseInt(e.target.value)), fullWidth: true, margin: "normal" }), _jsxs(FormControl, { fullWidth: true, margin: "normal", children: [_jsx(InputLabel, { children: "\u0422\u043E\u0432\u0449\u0438\u043D\u0430 \u0442\u0435\u043A\u0441\u0442\u0443" }), _jsxs(Select, { value: selectedObject.fontWeight || "normal", onChange: (e) => handleChange("fontWeight", e.target.value), fullWidth: true, children: [_jsx(MenuItem, { value: "normal", children: "Normal" }), _jsx(MenuItem, { value: "bold", children: "Bold" }), _jsx(MenuItem, { value: "lighter", children: "Lighter" }), _jsx(MenuItem, { value: "bolder", children: "Bolder" }), _jsx(MenuItem, { value: "400", children: "400" }), _jsx(MenuItem, { value: "700", children: "700" })] })] }), _jsxs(FormControl, { fullWidth: true, margin: "normal", children: [_jsx(InputLabel, { children: "\u0421\u0442\u0438\u043B\u044C \u0442\u0435\u043A\u0441\u0442\u0443" }), _jsxs(Select, { value: selectedObject.fontStyle || "normal", onChange: (e) => handleChange("fontStyle", e.target.value), children: [_jsx(MenuItem, { value: "normal", children: "Normal" }), _jsx(MenuItem, { value: "italic", children: "Italic" }), _jsx(MenuItem, { value: "oblique", children: "Oblique" })] })] }), _jsxs(FormControl, { fullWidth: true, margin: "normal", children: [_jsx(InputLabel, { children: "Text Transform" }), _jsxs(Select, { value: selectedObject.textTransform || "none", onChange: (e) => handleChange("textTransform", e.target.value), children: [_jsx(MenuItem, { value: "none", children: "None" }), _jsx(MenuItem, { value: "capitalize", children: "Capitalize" }), _jsx(MenuItem, { value: "uppercase", children: "Uppercase" }), _jsx(MenuItem, { value: "lowercase", children: "Lowercase" })] })] }), _jsxs(FormControl, { fullWidth: true, margin: "normal", children: [_jsx(InputLabel, { children: "Text Decoration" }), _jsxs(Select, { value: selectedObject.textDecoration || "none", onChange: (e) => handleChange("textDecoration", e.target.value), children: [_jsx(MenuItem, { value: "none", children: "None" }), _jsx(MenuItem, { value: "underline", children: "Underline" }), _jsx(MenuItem, { value: "overline", children: "Overline" }), _jsx(MenuItem, { value: "line-through", children: "Line-Through" })] })] }), _jsxs(FormControl, { fullWidth: true, margin: "normal", children: [_jsx(InputLabel, { children: "Text Align" }), _jsxs(Select, { value: selectedObject.textAlign || "left", onChange: (e) => handleChange("textAlign", e.target.value), children: [_jsx(MenuItem, { value: "left", children: "Left" }), _jsx(MenuItem, { value: "center", children: "Center" }), _jsx(MenuItem, { value: "right", children: "Right" }), _jsx(MenuItem, { value: "justify", children: "Justify" })] })] })] })), selectedObject.type === "image" && (_jsxs(_Fragment, { children: [_jsx(TextField, { label: "URL \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F", value: selectedObject.src || "", onChange: (e) => handleChange("src", e.target.value), fullWidth: true, margin: "normal" }), _jsx(TextField, { label: "\u0428\u0438\u0440\u0438\u043D\u0430 (px)", type: "number", value: selectedObject.width, onChange: (e) => handleChange("width", parseInt(e.target.value)), fullWidth: true, margin: "normal" }), _jsx(TextField, { label: "\u0412\u0438\u0441\u043E\u0442\u0430 (px)", type: "number", value: selectedObject.height, onChange: (e) => handleChange("height", parseInt(e.target.value)), fullWidth: true, margin: "normal" })] })), _jsx(Button, { variant: "contained", color: "error", onClick: handleDelete, sx: { marginTop: "20px" }, children: "\u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u043E\u0431'\u0454\u043A\u0442" })] })) : (_jsx(Typography, { children: "\u0412\u0438\u0431\u0435\u0440\u0456\u0442\u044C \u043E\u0431'\u0454\u043A\u0442 \u0434\u043B\u044F \u0440\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u043D\u043D\u044F" })), _jsx(Typography, { variant: "h6", sx: { marginTop: "20px" }, children: "\u0421\u043F\u0438\u0441\u043E\u043A \u043E\u0431'\u0454\u043A\u0442\u0456\u0432" }), _jsx(List, { children: objects.map((obj) => (_jsx(ListItem, { component: "li", onClick: () => setSelectedId(obj.id), sx: {
                        cursor: "pointer",
                        backgroundColor: obj.id === selectedId ? "lightgray" : "white",
                        "&:hover": { backgroundColor: "lightblue" },
                    }, children: _jsx(ListItemText, { primary: obj.type === "text" ? obj.content || "Текст" : "Зображення" }) }, obj.id))) })] }));
};
export default ObjectProperties;
